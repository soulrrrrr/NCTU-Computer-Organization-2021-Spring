$date
	Sun Apr 11 13:49:56 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TestBench $end
$var wire 1 ! zero $end
$var wire 5 " shamt [4:0] $end
$var wire 32 # sftSrc [31:0] $end
$var wire 32 $ result_Shifter [31:0] $end
$var wire 32 % result_ALU [31:0] $end
$var wire 1 & overflow $end
$var wire 2 ' operation [1:0] $end
$var wire 1 ( leftRight $end
$var wire 1 ) invertB $end
$var wire 1 * invertA $end
$var wire 32 + aluSrc2 [31:0] $end
$var wire 32 , aluSrc1 [31:0] $end
$var reg 34 - ans_ALU [33:0] $end
$var reg 34 . ans_Shifter [33:0] $end
$var reg 1 / clk $end
$var reg 68 0 inp_ALU [67:0] $end
$var reg 68 1 inp_Shifter [67:0] $end
$var integer 32 2 i [31:0] $end
$var integer 32 3 score [31:0] $end
$scope module alu $end
$var wire 32 4 aluSrc1 [31:0] $end
$var wire 32 5 aluSrc2 [31:0] $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 2 6 operation [1:0] $end
$var wire 1 ! zero $end
$var wire 1 7 set $end
$var wire 32 8 result [31:0] $end
$var wire 1 & overflow $end
$var wire 33 9 carryOut [32:0] $end
$scope begin genblk1[1] $end
$scope module f $end
$var wire 1 : a $end
$var wire 1 ; aa $end
$var wire 1 < b $end
$var wire 1 = bb $end
$var wire 1 > carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ? less $end
$var wire 2 @ operation [1:0] $end
$var wire 1 A sum $end
$var wire 1 B result $end
$var wire 1 C carryOut $end
$scope module f $end
$var wire 1 > carryIn $end
$var wire 1 C carryOut $end
$var wire 1 ; input1 $end
$var wire 1 = input2 $end
$var wire 1 A sum $end
$var wire 1 D w1 $end
$var wire 1 E w2 $end
$var wire 1 F w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module f $end
$var wire 1 G a $end
$var wire 1 H aa $end
$var wire 1 I b $end
$var wire 1 J bb $end
$var wire 1 K carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 L less $end
$var wire 2 M operation [1:0] $end
$var wire 1 N sum $end
$var wire 1 O result $end
$var wire 1 P carryOut $end
$scope module f $end
$var wire 1 K carryIn $end
$var wire 1 P carryOut $end
$var wire 1 H input1 $end
$var wire 1 J input2 $end
$var wire 1 N sum $end
$var wire 1 Q w1 $end
$var wire 1 R w2 $end
$var wire 1 S w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module f $end
$var wire 1 T a $end
$var wire 1 U aa $end
$var wire 1 V b $end
$var wire 1 W bb $end
$var wire 1 X carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 Y less $end
$var wire 2 Z operation [1:0] $end
$var wire 1 [ sum $end
$var wire 1 \ result $end
$var wire 1 ] carryOut $end
$scope module f $end
$var wire 1 X carryIn $end
$var wire 1 ] carryOut $end
$var wire 1 U input1 $end
$var wire 1 W input2 $end
$var wire 1 [ sum $end
$var wire 1 ^ w1 $end
$var wire 1 _ w2 $end
$var wire 1 ` w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module f $end
$var wire 1 a a $end
$var wire 1 b aa $end
$var wire 1 c b $end
$var wire 1 d bb $end
$var wire 1 e carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 f less $end
$var wire 2 g operation [1:0] $end
$var wire 1 h sum $end
$var wire 1 i result $end
$var wire 1 j carryOut $end
$scope module f $end
$var wire 1 e carryIn $end
$var wire 1 j carryOut $end
$var wire 1 b input1 $end
$var wire 1 d input2 $end
$var wire 1 h sum $end
$var wire 1 k w1 $end
$var wire 1 l w2 $end
$var wire 1 m w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module f $end
$var wire 1 n a $end
$var wire 1 o aa $end
$var wire 1 p b $end
$var wire 1 q bb $end
$var wire 1 r carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 s less $end
$var wire 2 t operation [1:0] $end
$var wire 1 u sum $end
$var wire 1 v result $end
$var wire 1 w carryOut $end
$scope module f $end
$var wire 1 r carryIn $end
$var wire 1 w carryOut $end
$var wire 1 o input1 $end
$var wire 1 q input2 $end
$var wire 1 u sum $end
$var wire 1 x w1 $end
$var wire 1 y w2 $end
$var wire 1 z w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module f $end
$var wire 1 { a $end
$var wire 1 | aa $end
$var wire 1 } b $end
$var wire 1 ~ bb $end
$var wire 1 !" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 "" less $end
$var wire 2 #" operation [1:0] $end
$var wire 1 $" sum $end
$var wire 1 %" result $end
$var wire 1 &" carryOut $end
$scope module f $end
$var wire 1 !" carryIn $end
$var wire 1 &" carryOut $end
$var wire 1 | input1 $end
$var wire 1 ~ input2 $end
$var wire 1 $" sum $end
$var wire 1 '" w1 $end
$var wire 1 (" w2 $end
$var wire 1 )" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module f $end
$var wire 1 *" a $end
$var wire 1 +" aa $end
$var wire 1 ," b $end
$var wire 1 -" bb $end
$var wire 1 ." carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 /" less $end
$var wire 2 0" operation [1:0] $end
$var wire 1 1" sum $end
$var wire 1 2" result $end
$var wire 1 3" carryOut $end
$scope module f $end
$var wire 1 ." carryIn $end
$var wire 1 3" carryOut $end
$var wire 1 +" input1 $end
$var wire 1 -" input2 $end
$var wire 1 1" sum $end
$var wire 1 4" w1 $end
$var wire 1 5" w2 $end
$var wire 1 6" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module f $end
$var wire 1 7" a $end
$var wire 1 8" aa $end
$var wire 1 9" b $end
$var wire 1 :" bb $end
$var wire 1 ;" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 <" less $end
$var wire 2 =" operation [1:0] $end
$var wire 1 >" sum $end
$var wire 1 ?" result $end
$var wire 1 @" carryOut $end
$scope module f $end
$var wire 1 ;" carryIn $end
$var wire 1 @" carryOut $end
$var wire 1 8" input1 $end
$var wire 1 :" input2 $end
$var wire 1 >" sum $end
$var wire 1 A" w1 $end
$var wire 1 B" w2 $end
$var wire 1 C" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module f $end
$var wire 1 D" a $end
$var wire 1 E" aa $end
$var wire 1 F" b $end
$var wire 1 G" bb $end
$var wire 1 H" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 I" less $end
$var wire 2 J" operation [1:0] $end
$var wire 1 K" sum $end
$var wire 1 L" result $end
$var wire 1 M" carryOut $end
$scope module f $end
$var wire 1 H" carryIn $end
$var wire 1 M" carryOut $end
$var wire 1 E" input1 $end
$var wire 1 G" input2 $end
$var wire 1 K" sum $end
$var wire 1 N" w1 $end
$var wire 1 O" w2 $end
$var wire 1 P" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module f $end
$var wire 1 Q" a $end
$var wire 1 R" aa $end
$var wire 1 S" b $end
$var wire 1 T" bb $end
$var wire 1 U" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 V" less $end
$var wire 2 W" operation [1:0] $end
$var wire 1 X" sum $end
$var wire 1 Y" result $end
$var wire 1 Z" carryOut $end
$scope module f $end
$var wire 1 U" carryIn $end
$var wire 1 Z" carryOut $end
$var wire 1 R" input1 $end
$var wire 1 T" input2 $end
$var wire 1 X" sum $end
$var wire 1 [" w1 $end
$var wire 1 \" w2 $end
$var wire 1 ]" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module f $end
$var wire 1 ^" a $end
$var wire 1 _" aa $end
$var wire 1 `" b $end
$var wire 1 a" bb $end
$var wire 1 b" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 c" less $end
$var wire 2 d" operation [1:0] $end
$var wire 1 e" sum $end
$var wire 1 f" result $end
$var wire 1 g" carryOut $end
$scope module f $end
$var wire 1 b" carryIn $end
$var wire 1 g" carryOut $end
$var wire 1 _" input1 $end
$var wire 1 a" input2 $end
$var wire 1 e" sum $end
$var wire 1 h" w1 $end
$var wire 1 i" w2 $end
$var wire 1 j" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module f $end
$var wire 1 k" a $end
$var wire 1 l" aa $end
$var wire 1 m" b $end
$var wire 1 n" bb $end
$var wire 1 o" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 p" less $end
$var wire 2 q" operation [1:0] $end
$var wire 1 r" sum $end
$var wire 1 s" result $end
$var wire 1 t" carryOut $end
$scope module f $end
$var wire 1 o" carryIn $end
$var wire 1 t" carryOut $end
$var wire 1 l" input1 $end
$var wire 1 n" input2 $end
$var wire 1 r" sum $end
$var wire 1 u" w1 $end
$var wire 1 v" w2 $end
$var wire 1 w" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module f $end
$var wire 1 x" a $end
$var wire 1 y" aa $end
$var wire 1 z" b $end
$var wire 1 {" bb $end
$var wire 1 |" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 }" less $end
$var wire 2 ~" operation [1:0] $end
$var wire 1 !# sum $end
$var wire 1 "# result $end
$var wire 1 ## carryOut $end
$scope module f $end
$var wire 1 |" carryIn $end
$var wire 1 ## carryOut $end
$var wire 1 y" input1 $end
$var wire 1 {" input2 $end
$var wire 1 !# sum $end
$var wire 1 $# w1 $end
$var wire 1 %# w2 $end
$var wire 1 &# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module f $end
$var wire 1 '# a $end
$var wire 1 (# aa $end
$var wire 1 )# b $end
$var wire 1 *# bb $end
$var wire 1 +# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ,# less $end
$var wire 2 -# operation [1:0] $end
$var wire 1 .# sum $end
$var wire 1 /# result $end
$var wire 1 0# carryOut $end
$scope module f $end
$var wire 1 +# carryIn $end
$var wire 1 0# carryOut $end
$var wire 1 (# input1 $end
$var wire 1 *# input2 $end
$var wire 1 .# sum $end
$var wire 1 1# w1 $end
$var wire 1 2# w2 $end
$var wire 1 3# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module f $end
$var wire 1 4# a $end
$var wire 1 5# aa $end
$var wire 1 6# b $end
$var wire 1 7# bb $end
$var wire 1 8# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 9# less $end
$var wire 2 :# operation [1:0] $end
$var wire 1 ;# sum $end
$var wire 1 <# result $end
$var wire 1 =# carryOut $end
$scope module f $end
$var wire 1 8# carryIn $end
$var wire 1 =# carryOut $end
$var wire 1 5# input1 $end
$var wire 1 7# input2 $end
$var wire 1 ;# sum $end
$var wire 1 ># w1 $end
$var wire 1 ?# w2 $end
$var wire 1 @# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module f $end
$var wire 1 A# a $end
$var wire 1 B# aa $end
$var wire 1 C# b $end
$var wire 1 D# bb $end
$var wire 1 E# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 F# less $end
$var wire 2 G# operation [1:0] $end
$var wire 1 H# sum $end
$var wire 1 I# result $end
$var wire 1 J# carryOut $end
$scope module f $end
$var wire 1 E# carryIn $end
$var wire 1 J# carryOut $end
$var wire 1 B# input1 $end
$var wire 1 D# input2 $end
$var wire 1 H# sum $end
$var wire 1 K# w1 $end
$var wire 1 L# w2 $end
$var wire 1 M# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module f $end
$var wire 1 N# a $end
$var wire 1 O# aa $end
$var wire 1 P# b $end
$var wire 1 Q# bb $end
$var wire 1 R# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 S# less $end
$var wire 2 T# operation [1:0] $end
$var wire 1 U# sum $end
$var wire 1 V# result $end
$var wire 1 W# carryOut $end
$scope module f $end
$var wire 1 R# carryIn $end
$var wire 1 W# carryOut $end
$var wire 1 O# input1 $end
$var wire 1 Q# input2 $end
$var wire 1 U# sum $end
$var wire 1 X# w1 $end
$var wire 1 Y# w2 $end
$var wire 1 Z# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module f $end
$var wire 1 [# a $end
$var wire 1 \# aa $end
$var wire 1 ]# b $end
$var wire 1 ^# bb $end
$var wire 1 _# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 `# less $end
$var wire 2 a# operation [1:0] $end
$var wire 1 b# sum $end
$var wire 1 c# result $end
$var wire 1 d# carryOut $end
$scope module f $end
$var wire 1 _# carryIn $end
$var wire 1 d# carryOut $end
$var wire 1 \# input1 $end
$var wire 1 ^# input2 $end
$var wire 1 b# sum $end
$var wire 1 e# w1 $end
$var wire 1 f# w2 $end
$var wire 1 g# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module f $end
$var wire 1 h# a $end
$var wire 1 i# aa $end
$var wire 1 j# b $end
$var wire 1 k# bb $end
$var wire 1 l# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 m# less $end
$var wire 2 n# operation [1:0] $end
$var wire 1 o# sum $end
$var wire 1 p# result $end
$var wire 1 q# carryOut $end
$scope module f $end
$var wire 1 l# carryIn $end
$var wire 1 q# carryOut $end
$var wire 1 i# input1 $end
$var wire 1 k# input2 $end
$var wire 1 o# sum $end
$var wire 1 r# w1 $end
$var wire 1 s# w2 $end
$var wire 1 t# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module f $end
$var wire 1 u# a $end
$var wire 1 v# aa $end
$var wire 1 w# b $end
$var wire 1 x# bb $end
$var wire 1 y# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 z# less $end
$var wire 2 {# operation [1:0] $end
$var wire 1 |# sum $end
$var wire 1 }# result $end
$var wire 1 ~# carryOut $end
$scope module f $end
$var wire 1 y# carryIn $end
$var wire 1 ~# carryOut $end
$var wire 1 v# input1 $end
$var wire 1 x# input2 $end
$var wire 1 |# sum $end
$var wire 1 !$ w1 $end
$var wire 1 "$ w2 $end
$var wire 1 #$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module f $end
$var wire 1 $$ a $end
$var wire 1 %$ aa $end
$var wire 1 &$ b $end
$var wire 1 '$ bb $end
$var wire 1 ($ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 )$ less $end
$var wire 2 *$ operation [1:0] $end
$var wire 1 +$ sum $end
$var wire 1 ,$ result $end
$var wire 1 -$ carryOut $end
$scope module f $end
$var wire 1 ($ carryIn $end
$var wire 1 -$ carryOut $end
$var wire 1 %$ input1 $end
$var wire 1 '$ input2 $end
$var wire 1 +$ sum $end
$var wire 1 .$ w1 $end
$var wire 1 /$ w2 $end
$var wire 1 0$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module f $end
$var wire 1 1$ a $end
$var wire 1 2$ aa $end
$var wire 1 3$ b $end
$var wire 1 4$ bb $end
$var wire 1 5$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 6$ less $end
$var wire 2 7$ operation [1:0] $end
$var wire 1 8$ sum $end
$var wire 1 9$ result $end
$var wire 1 :$ carryOut $end
$scope module f $end
$var wire 1 5$ carryIn $end
$var wire 1 :$ carryOut $end
$var wire 1 2$ input1 $end
$var wire 1 4$ input2 $end
$var wire 1 8$ sum $end
$var wire 1 ;$ w1 $end
$var wire 1 <$ w2 $end
$var wire 1 =$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module f $end
$var wire 1 >$ a $end
$var wire 1 ?$ aa $end
$var wire 1 @$ b $end
$var wire 1 A$ bb $end
$var wire 1 B$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 C$ less $end
$var wire 2 D$ operation [1:0] $end
$var wire 1 E$ sum $end
$var wire 1 F$ result $end
$var wire 1 G$ carryOut $end
$scope module f $end
$var wire 1 B$ carryIn $end
$var wire 1 G$ carryOut $end
$var wire 1 ?$ input1 $end
$var wire 1 A$ input2 $end
$var wire 1 E$ sum $end
$var wire 1 H$ w1 $end
$var wire 1 I$ w2 $end
$var wire 1 J$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module f $end
$var wire 1 K$ a $end
$var wire 1 L$ aa $end
$var wire 1 M$ b $end
$var wire 1 N$ bb $end
$var wire 1 O$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 P$ less $end
$var wire 2 Q$ operation [1:0] $end
$var wire 1 R$ sum $end
$var wire 1 S$ result $end
$var wire 1 T$ carryOut $end
$scope module f $end
$var wire 1 O$ carryIn $end
$var wire 1 T$ carryOut $end
$var wire 1 L$ input1 $end
$var wire 1 N$ input2 $end
$var wire 1 R$ sum $end
$var wire 1 U$ w1 $end
$var wire 1 V$ w2 $end
$var wire 1 W$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module f $end
$var wire 1 X$ a $end
$var wire 1 Y$ aa $end
$var wire 1 Z$ b $end
$var wire 1 [$ bb $end
$var wire 1 \$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ]$ less $end
$var wire 2 ^$ operation [1:0] $end
$var wire 1 _$ sum $end
$var wire 1 `$ result $end
$var wire 1 a$ carryOut $end
$scope module f $end
$var wire 1 \$ carryIn $end
$var wire 1 a$ carryOut $end
$var wire 1 Y$ input1 $end
$var wire 1 [$ input2 $end
$var wire 1 _$ sum $end
$var wire 1 b$ w1 $end
$var wire 1 c$ w2 $end
$var wire 1 d$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module f $end
$var wire 1 e$ a $end
$var wire 1 f$ aa $end
$var wire 1 g$ b $end
$var wire 1 h$ bb $end
$var wire 1 i$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 j$ less $end
$var wire 2 k$ operation [1:0] $end
$var wire 1 l$ sum $end
$var wire 1 m$ result $end
$var wire 1 n$ carryOut $end
$scope module f $end
$var wire 1 i$ carryIn $end
$var wire 1 n$ carryOut $end
$var wire 1 f$ input1 $end
$var wire 1 h$ input2 $end
$var wire 1 l$ sum $end
$var wire 1 o$ w1 $end
$var wire 1 p$ w2 $end
$var wire 1 q$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module f $end
$var wire 1 r$ a $end
$var wire 1 s$ aa $end
$var wire 1 t$ b $end
$var wire 1 u$ bb $end
$var wire 1 v$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 w$ less $end
$var wire 2 x$ operation [1:0] $end
$var wire 1 y$ sum $end
$var wire 1 z$ result $end
$var wire 1 {$ carryOut $end
$scope module f $end
$var wire 1 v$ carryIn $end
$var wire 1 {$ carryOut $end
$var wire 1 s$ input1 $end
$var wire 1 u$ input2 $end
$var wire 1 y$ sum $end
$var wire 1 |$ w1 $end
$var wire 1 }$ w2 $end
$var wire 1 ~$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module f $end
$var wire 1 !% a $end
$var wire 1 "% aa $end
$var wire 1 #% b $end
$var wire 1 $% bb $end
$var wire 1 %% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 &% less $end
$var wire 2 '% operation [1:0] $end
$var wire 1 (% sum $end
$var wire 1 )% result $end
$var wire 1 *% carryOut $end
$scope module f $end
$var wire 1 %% carryIn $end
$var wire 1 *% carryOut $end
$var wire 1 "% input1 $end
$var wire 1 $% input2 $end
$var wire 1 (% sum $end
$var wire 1 +% w1 $end
$var wire 1 ,% w2 $end
$var wire 1 -% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module f $end
$var wire 1 .% a $end
$var wire 1 /% aa $end
$var wire 1 0% b $end
$var wire 1 1% bb $end
$var wire 1 2% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 3% less $end
$var wire 2 4% operation [1:0] $end
$var wire 1 5% sum $end
$var wire 1 6% result $end
$var wire 1 7% carryOut $end
$scope module f $end
$var wire 1 2% carryIn $end
$var wire 1 7% carryOut $end
$var wire 1 /% input1 $end
$var wire 1 1% input2 $end
$var wire 1 5% sum $end
$var wire 1 8% w1 $end
$var wire 1 9% w2 $end
$var wire 1 :% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module f $end
$var wire 1 ;% a $end
$var wire 1 <% aa $end
$var wire 1 =% b $end
$var wire 1 >% bb $end
$var wire 1 ?% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 @% less $end
$var wire 2 A% operation [1:0] $end
$var wire 1 B% sum $end
$var wire 1 C% result $end
$var wire 1 D% carryOut $end
$scope module f $end
$var wire 1 ?% carryIn $end
$var wire 1 D% carryOut $end
$var wire 1 <% input1 $end
$var wire 1 >% input2 $end
$var wire 1 B% sum $end
$var wire 1 E% w1 $end
$var wire 1 F% w2 $end
$var wire 1 G% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module ff $end
$var wire 1 H% a $end
$var wire 1 I% aa $end
$var wire 1 J% b $end
$var wire 1 K% bb $end
$var wire 1 L% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 2 M% operation [1:0] $end
$var wire 1 N% sum $end
$var wire 1 O% result $end
$var wire 1 7 less $end
$var wire 1 P% carryOut $end
$scope module f $end
$var wire 1 L% carryIn $end
$var wire 1 P% carryOut $end
$var wire 1 I% input1 $end
$var wire 1 K% input2 $end
$var wire 1 N% sum $end
$var wire 1 Q% w1 $end
$var wire 1 R% w2 $end
$var wire 1 S% w3 $end
$upscope $end
$upscope $end
$scope module m $end
$var wire 1 T% a $end
$var wire 1 U% aa $end
$var wire 1 V% b $end
$var wire 1 W% bb $end
$var wire 1 X% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 Y% less $end
$var wire 2 Z% operation [1:0] $end
$var wire 1 7 set $end
$var wire 1 [% sum $end
$var wire 1 \% result $end
$var wire 1 ]% carryOut $end
$scope module f $end
$var wire 1 X% carryIn $end
$var wire 1 ]% carryOut $end
$var wire 1 U% input1 $end
$var wire 1 W% input2 $end
$var wire 1 [% sum $end
$var wire 1 ^% w1 $end
$var wire 1 _% w2 $end
$var wire 1 `% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module shifter $end
$var wire 1 ( leftRight $end
$var wire 32 a% sftSrc [31:0] $end
$var wire 5 b% shamt [4:0] $end
$var wire 32 c% result [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx c%
bx b%
bx a%
x`%
x_%
x^%
x]%
x\%
x[%
bx Z%
0Y%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
bx M%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
bx A%
0@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
bx 4%
03%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
bx '%
0&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
bx x$
0w$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
bx k$
0j$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
bx ^$
0]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
bx Q$
0P$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
bx D$
0C$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
bx 7$
06$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
bx *$
0)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
bx {#
0z#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
bx n#
0m#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
bx a#
0`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
bx T#
0S#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
bx G#
0F#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
bx :#
09#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
bx -#
0,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
bx ~"
0}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
bx q"
0p"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
bx d"
0c"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
bx W"
0V"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
bx J"
0I"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
bx ="
0<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
bx 0"
0/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
bx #"
0""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
bx t
0s
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
bx g
0f
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
bx Z
0Y
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
bx M
0L
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
bx @
0?
x>
x=
x<
x;
x:
bx 9
bx 8
x7
bx 6
bx 5
bx 4
b0 3
b0 2
bx 1
bx 0
0/
bx .
bx -
bx ,
bx +
x*
x)
x(
bx '
x&
bx %
bx $
bx #
bx "
x!
$end
#5000
1/
#10000
1h
1e
0N
1]
0A
0K
0[
1`
1u
1$"
11"
1>"
1K"
1X"
1e"
1r"
1!#
1.#
1;#
1H#
1U#
1b#
1o#
1|#
1+$
18$
1E$
1R$
1_$
1l$
1y$
1(%
15%
1B%
17
1[%
0!
0>
0B
0C
1O
1X
1\
1i
1r
1v
1!"
1%"
1."
12"
1;"
1?"
1H"
1L"
1U"
1Y"
1b"
1f"
1o"
1s"
1|"
1"#
1+#
1/#
18#
1<#
1E#
1I#
1R#
1V#
1_#
1c#
1l#
1p#
1y#
1}#
1($
1,$
15$
19$
1B$
1F$
1O$
1S$
1\$
1`$
1i$
1m$
1v$
1z$
1%%
1)%
12%
16%
1?%
1C%
1X%
1\%
b11111111111111111111111111111100 %
b11111111111111111111111111111100 8
0O%
0P%
0F
0S
1P
0m
1j
0z
1w
0)"
1&"
06"
13"
0C"
1@"
0P"
1M"
0]"
1Z"
0j"
1g"
0w"
1t"
0&#
1##
03#
10#
0@#
1=#
0M#
1J#
0Z#
1W#
0g#
1d#
0t#
1q#
0#$
1~#
00$
1-$
0=$
1:$
0J$
1G$
0W$
1T$
0d$
1a$
0q$
1n$
0~$
1{$
0-%
1*%
0:%
17%
0G%
1D%
0`%
1]%
1N%
0S%
0D
0E
0Q
1R
1^
0_
0k
1l
0x
1y
0'"
1("
04"
15"
0A"
1B"
0N"
1O"
0["
1\"
0h"
1i"
0u"
1v"
0$#
1%#
01#
12#
0>#
1?#
0K#
1L#
0X#
1Y#
0e#
1f#
0r#
1s#
0!$
1"$
0.$
1/$
0;$
1<$
0H$
1I$
0U$
1V$
0b$
1c$
0o$
1p$
0|$
1}$
0+%
1,%
08%
19%
0E%
1F%
0^%
1_%
0Q%
0R%
0;
1H
1U
1b
1o
1|
1+"
18"
1E"
1R"
1_"
1l"
1y"
1(#
15#
1B#
1O#
1\#
1i#
1v#
1%$
12$
1?$
1L$
1Y$
1f$
1s$
1"%
1/%
1<%
1U%
0I%
0=
1J
0W
1d
1q
1~
1-"
1:"
1G"
1T"
1a"
1n"
1{"
1*#
17#
1D#
1Q#
1^#
1k#
1x#
1'$
14$
1A$
1N$
1[$
1h$
1u$
1$%
11%
1>%
1W%
0K%
0&
b110 $
b110 c%
1:
0G
0T
0a
0n
0{
0*"
07"
0D"
0Q"
0^"
0k"
0x"
0'#
04#
0A#
0N#
0[#
0h#
0u#
0$$
01$
0>$
0K$
0X$
0e$
0r$
0!%
0.%
0;%
0T%
1H%
1<
0I
1V
0c
0p
0}
0,"
09"
0F"
0S"
0`"
0m"
0z"
0)#
06#
0C#
0P#
0]#
0j#
0w#
0&$
03$
0@$
0M$
0Z$
0g$
0t$
0#%
00%
0=%
0V%
1J%
1L%
1(
b1 "
b1 b%
b11 #
b11 a%
b11 ,
b11 4
b1011 +
b1011 5
1*
b111111111111111111111111111111001 9
1)
b1 '
b1 6
b1 @
b1 M
b1 Z
b1 g
b1 t
b1 #"
b1 0"
b1 ="
b1 J"
b1 W"
b1 d"
b1 q"
b1 ~"
b1 -#
b1 :#
b1 G#
b1 T#
b1 a#
b1 n#
b1 {#
b1 *$
b1 7$
b1 D$
b1 Q$
b1 ^$
b1 k$
b1 x$
b1 '%
b1 4%
b1 A%
b1 M%
b1 Z%
b1 2
b10000100000000000000000000000000000011 1
b110 .
b11010000000000000000000000000000001100000000000000000000000000001011 0
b11111111111111111111111111111100 -
0/
#11000
b1 3
#12000
b10 3
#15000
1/
#20000
1S
1K
1C
1F
0O
1X
1O%
1>
0A
0N
1P
1[
0`
b111111111111111111111111111111111 9
1P%
1D
1Q
0R
0^
1_
1R%
b11111111111111111111111111111001 %
b11111111111111111111111111111001 8
1\
1I%
1=
0J
1W
1K%
b1 $
b1 c%
0H%
0<
1I
0V
0J%
0(
b10 ,
b10 4
b100 +
b100 5
b0 '
b0 6
b0 @
b0 M
b0 Z
b0 g
b0 t
b0 #"
b0 0"
b0 ="
b0 J"
b0 W"
b0 d"
b0 q"
b0 ~"
b0 -#
b0 :#
b0 G#
b0 T#
b0 a#
b0 n#
b0 {#
b0 *$
b0 7$
b0 D$
b0 Q$
b0 ^$
b0 k$
b0 x$
b0 '%
b0 4%
b0 A%
b0 M%
b0 Z%
b10 2
b100000000000000000000000000000011 1
b1 .
b11000000000000000000000000000000001000000000000000000000000000000100 0
b11111111111111111111111111111001 -
0/
#21000
b11 3
#22000
b100 3
#25000
1/
#30000
0&
0!
0K
0X
1O%
0>
0C
0P
0e
0r
0!"
0."
0;"
0H"
0U"
0b"
0o"
0|"
0+#
08#
0E#
0R#
0_#
0l#
0y#
0($
05$
0B$
0O$
0\$
0i$
0v$
0%%
02%
0?%
0X%
1N%
0S%
0P%
1A
0F
0N
0S
1[
0`
0]
1h
0m
0j
1u
0z
0w
1$"
0)"
0&"
11"
06"
03"
1>"
0C"
0@"
1K"
0P"
0M"
1X"
0]"
0Z"
1e"
0j"
0g"
1r"
0w"
0t"
1!#
0&#
0##
1.#
03#
00#
1;#
0@#
0=#
1H#
0M#
0J#
1U#
0Z#
0W#
1b#
0g#
0d#
1o#
0t#
0q#
1|#
0#$
0~#
1+$
00$
0-$
18$
0=$
0:$
1E$
0J$
0G$
1R$
0W$
0T$
1_$
0d$
0a$
1l$
0q$
0n$
1y$
0~$
0{$
1(%
0-%
0*%
15%
0:%
07%
1B%
0G%
0D%
17
1[%
0`%
b1 9
0]%
0=
0K%
0Q%
0R%
1D
0E
0Q
1^
0_
1k
0l
1x
0y
1'"
0("
14"
05"
1A"
0B"
1N"
0O"
1["
0\"
1h"
0i"
1u"
0v"
1$#
0%#
11#
02#
1>#
0?#
1K#
0L#
1X#
0Y#
1e#
0f#
1r#
0s#
1!$
0"$
1.$
0/$
1;$
0<$
1H$
0I$
1U$
0V$
1b$
0c$
1o$
0p$
1|$
0}$
1+%
0,%
18%
09%
1E%
0F%
1^%
0_%
0\
0i
0v
0%"
02"
0?"
0L"
0Y"
0f"
0s"
0"#
0/#
0<#
0I#
0V#
0c#
0p#
0}#
0,$
09$
0F$
0S$
0`$
0m$
0z$
0)%
06%
0C%
b1 %
b1 8
0\%
b10 $
b10 c%
1<
1J%
0I%
1;
0H
0U
0b
0o
0|
0+"
08"
0E"
0R"
0_"
0l"
0y"
0(#
05#
0B#
0O#
0\#
0i#
0v#
0%$
02$
0?$
0L$
0Y$
0f$
0s$
0"%
0/%
0<%
0U%
1(
b1 #
b1 a%
b111 +
b111 5
0*
b11 '
b11 6
b11 @
b11 M
b11 Z
b11 g
b11 t
b11 #"
b11 0"
b11 ="
b11 J"
b11 W"
b11 d"
b11 q"
b11 ~"
b11 -#
b11 :#
b11 G#
b11 T#
b11 a#
b11 n#
b11 {#
b11 *$
b11 7$
b11 D$
b11 Q$
b11 ^$
b11 k$
b11 x$
b11 '%
b11 4%
b11 A%
b11 M%
b11 Z%
b11 2
b10000100000000000000000000000000000001 1
b10 .
b1110000000000000000000000000000001000000000000000000000000000000111 0
b1 -
0/
#31000
b101 3
#32000
b110 3
#35000
1/
#40000
1!
b0 %
b0 8
0O%
0[
0h
0u
0$"
01"
0>"
0K"
0X"
0e"
0r"
0!#
0.#
0;#
0H#
0U#
0b#
0o#
0|#
0+$
08$
0E$
0R$
0_$
0l$
0y$
0(%
05%
0B%
07
0[%
0^
0k
0x
0'"
04"
0A"
0N"
0["
0h"
0u"
0$#
01#
0>#
0K#
0X#
0e#
0r#
0!$
0.$
0;$
0H$
0U$
0b$
0o$
0|$
0+%
08%
0E%
0^%
0W
0d
0q
0~
0-"
0:"
0G"
0T"
0a"
0n"
0{"
0*#
07#
0D#
0Q#
0^#
0k#
0x#
0'$
04$
0A$
0N$
0[$
0h$
0u$
0$%
01%
0>%
0W%
b10000000000000000000000000000 $
b10000000000000000000000000000 c%
1V
1c
1p
1}
1,"
19"
1F"
1S"
1`"
1m"
1z"
1)#
16#
1C#
1P#
1]#
1j#
1w#
1&$
13$
1@$
1M$
1Z$
1g$
1t$
1#%
10%
1=%
1V%
0(
b11 "
b11 b%
b10000000000000000000000000000000 #
b10000000000000000000000000000000 a%
b11111111111111111111111111111111 +
b11111111111111111111111111111111 5
b100 2
b1110000000000000000000000000000000 1
b10000000000000000000000000000 .
b1110000000000000000000000000000001011111111111111111111111111111111 0
b100000000000000000000000000000000 -
0/
#41000
b111 3
#42000
b1000 3
#45000
1/
#50000
x&
xF
xS
x`
xm
xz
x)"
x6"
xC"
xP"
x]"
xj"
xw"
x&#
x3#
x@#
xM#
xZ#
xg#
xt#
x#$
x0$
x=$
xJ$
xW$
xd$
xq$
x~$
x-%
x:%
xG%
x`%
x>
xK
xO
xX
x\
xe
xi
xr
xv
x!"
x%"
x."
x2"
x;"
x?"
xH"
xL"
xU"
xY"
xb"
xf"
xo"
xs"
x|"
x"#
x+#
x/#
x8#
x<#
xE#
xI#
xR#
xV#
x_#
xc#
xl#
xp#
xy#
x}#
x($
x,$
x5$
x9$
xB$
xF$
xO$
xS$
x\$
x`$
xi$
xm$
xv$
xz$
x%%
x)%
x2%
x6%
x?%
xC%
xX%
x\%
xP%
xA
xC
xN
xP
x[
x]
xh
xj
xu
xw
x$"
x&"
x1"
x3"
x>"
x@"
xK"
xM"
xX"
xZ"
xe"
xg"
xr"
xt"
x!#
x##
x.#
x0#
x;#
x=#
xH#
xJ#
xU#
xW#
xb#
xd#
xo#
xq#
x|#
x~#
x+$
x-$
x8$
x:$
xE$
xG$
xR$
xT$
x_$
xa$
xl$
xn$
xy$
x{$
x(%
x*%
x5%
x7%
xB%
xD%
x7
x[%
x]%
x!
xN%
xS%
xQ%
xR%
xD
xE
xQ
xR
x^
x_
xk
xl
xx
xy
x'"
x("
x4"
x5"
xA"
xB"
xN"
xO"
x["
x\"
xh"
xi"
xu"
xv"
x$#
x%#
x1#
x2#
x>#
x?#
xK#
xL#
xX#
xY#
xe#
xf#
xr#
xs#
x!$
x"$
x.$
x/$
x;$
x<$
xH$
xI$
xU$
xV$
xb$
xc$
xo$
xp$
x|$
x}$
x+%
x,%
x8%
x9%
xE%
xF%
x^%
x_%
xO%
bx %
bx 8
xB
bx $
bx c%
x:
xG
xT
xa
xn
x{
x*"
x7"
xD"
xQ"
x^"
xk"
xx"
x'#
x4#
xA#
xN#
x[#
xh#
xu#
x$$
x1$
x>$
xK$
xX$
xe$
xr$
x!%
x.%
x;%
xT%
xH%
x<
xI
xV
xc
xp
x}
x,"
x9"
xF"
xS"
x`"
xm"
xz"
x)#
x6#
xC#
xP#
x]#
xj#
xw#
x&$
x3$
x@$
xM$
xZ$
xg$
xt$
x#%
x0%
x=%
xV%
xJ%
xI%
x;
xH
xU
xb
xo
x|
x+"
x8"
xE"
xR"
x_"
xl"
xy"
x(#
x5#
xB#
xO#
x\#
xi#
xv#
x%$
x2$
x?$
xL$
xY$
xf$
xs$
x"%
x/%
x<%
xU%
xL%
xK%
x=
xJ
xW
xd
xq
x~
x-"
x:"
xG"
xT"
xa"
xn"
x{"
x*#
x7#
xD#
xQ#
x^#
xk#
xx#
x'$
x4$
xA$
xN$
x[$
xh$
xu$
x$%
x1%
x>%
xW%
x(
bx "
bx b%
bx #
bx a%
bx ,
bx 4
bx +
bx 5
x*
bx 9
x)
bx '
bx 6
bx @
bx M
bx Z
bx g
bx t
bx #"
bx 0"
bx ="
bx J"
bx W"
bx d"
bx q"
bx ~"
bx -#
bx :#
bx G#
bx T#
bx a#
bx n#
bx {#
bx *$
bx 7$
bx D$
bx Q$
bx ^$
bx k$
bx x$
bx '%
bx 4%
bx A%
bx M%
bx Z%
b101 2
bx 1
bx .
bx 0
bx -
0/
